#spring.application.name=kooking
# this configuration needs to correspond to the Vue.js frontends' vue.config.js devServer.proxy.target configuration!
# otherwise you may experience errors like: Proxy error: Could not proxy request /api/hello from localhost:8080 to http://localhost:8098... (ECONNREFUSED).
server.port=8098
spring.security.user.name=sina
spring.security.user.password=miller
cors.allowed-origins=http://localhost:8098,http://localhost:8080,https://myfrontend.zrok.defgun.blog
jwt.secret=9df8505bb4eb7833d0f07cebec765d065344850a4548a5f8c3a9ffea5c01e6bd
logging.level.org.springframework.security=DEBUG
# H2 DB config
#spring.datasource.url=jdbc:h2:mem:testdb
# New file-based configuration
spring.datasource.url=jdbc:h2:file:./data/kookingdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
# Hibernate
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
# Enable H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true
spring.jpa.properties.hibernate.hbm2ddl.import_files_sql_extractor=org.hibernate.tool.schema.internal.script.MultiLineSqlScriptExtractor

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=606716944314-8c2aiqdp2q8gea4e9vn80qfkk5k22uko.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri=https://mybackend.zrok.defgun.blog/login/oauth2/code/google
app.frontend.base-url=https://myfrontend.zrok.defgun.blog